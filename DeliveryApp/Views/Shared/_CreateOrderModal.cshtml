@model DeliveryApp.Models.ViewModels.OrderCreateViewModel

<div class="modal fade" id="createOrderModal" tabindex="-1" aria-labelledby="createOrderModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content" style="color: #212529; text-shadow:none">
            <div class="modal-header">
                <h5 class="modal-title" id="createOrderModalLabel">Создать новый заказ</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form id="orderForm" asp-controller="Orders" asp-action="Create" method="post">
                <div class="modal-body">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                    <div class="mb-3">
                        <label asp-for="SenderCity" class="form-label">Город отправителя</label>
                        <input asp-for="SenderCity" class="form-control" required />
                        <span asp-validation-for="SenderCity" class="text-danger"></span>
                    </div>

                    <div class="mb-3">
                        <label asp-for="SenderAddress" class="form-label">Адрес отправителя</label>
                        <input asp-for="SenderAddress" class="form-control" required />
                        <span asp-validation-for="SenderAddress" class="text-danger"></span>
                    </div>

                    <div class="mb-3">
                        <label asp-for="ReceiverCity" class="form-label">Город получателя</label>
                        <input asp-for="ReceiverCity" class="form-control" required />
                        <span asp-validation-for="ReceiverCity" class="text-danger"></span>
                    </div>

                    <div class="mb-3">
                        <label asp-for="ReceiverAddress" class="form-label">Адрес получателя</label>
                        <input asp-for="ReceiverAddress" class="form-control" required />
                        <span asp-validation-for="ReceiverAddress" class="text-danger"></span>
                    </div>

                    <div class="mb-3">
                        <label asp-for="Weight" class="form-label">Вес груза (кг)</label>
                        <input asp-for="Weight" class="form-control" required min="0.1" step="0.01" />
                        <span asp-validation-for="Weight" class="text-danger"></span>
                    </div>

                    <div class="mb-3">
                        <label asp-for="PickupDate" class="form-label">Дата забора груза</label>
                        <input asp-for="PickupDate" class="form-control" type="datetime-local"
                               min="@DateTime.UtcNow.ToString("yyyy-MM-ddTHH:mm")" required />
                        <span asp-validation-for="PickupDate" class="text-danger"></span>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="submit" id="submitBtn" class="btn btn-primary" disabled>Создать заказ</button>
                </div>
            </form>
        </div>
    </div>
</div>

<script>
    document.getElementById('createOrderModal').addEventListener('shown.bs.modal', function() {
        const form = document.getElementById('orderForm');
        const submitBtn = document.getElementById('submitBtn');
        const inputs = form.querySelectorAll('input[required]');

        //проверка валидности формы
        function checkFormValidity() {
            let isValid = true;

            inputs.forEach(input => {
                if (!input.value.trim()) {
                    isValid = false;
                    return;
                }

                // проверка веса
                if (input.name === "Weight" && parseFloat(input.value) <= 0) {
                    isValid = false;
                }

                // проверка даты
                if (input.type === "datetime-local") {
                    const selectedDate = new Date(input.value);
                    if (selectedDate < new Date()) {
                        isValid = false;
                    }
                }
            });

            submitBtn.disabled = !isValid;
        }

        //обработчики событий
        inputs.forEach(input => {
            input.addEventListener('input', checkFormValidity);
            input.addEventListener('change', checkFormValidity);
        });

        //инициализируем при открытии
        checkFormValidity();

        //отправка формы
        form.addEventListener('submit', function(e) {
            if (submitBtn.disabled) {
                e.preventDefault();
                e.stopPropagation();
                alert("Пожалуйста, заполните все поля корректно");
            }
        });
    });
</script>